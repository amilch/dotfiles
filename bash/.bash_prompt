# styling
bold=$(tput bold)
normal=$(tput sgr0)
color_red=$(tput setaf 1)
color_green=$(tput setaf 2)
color_yellow=$(tput setaf 3)

# Local or SSH session?
userhost="\u"
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]
  then
    userhost="\u@\h"
fi

if (( EUID == 0 )); then
  userhost="\[${color_red}\]${userhost}\[${normal}\]"
elif [[ $SUDO_USER ]]; then
  userhost="\[${color_yellow}\]${userhost}\[${normal}\]"
fi

# speedy git prompt
function parse_git_branch {
    ref=$(git symbolic-ref HEAD 2> /dev/null) || return
    branch=${ref#refs/heads/}

    # abrevation
    # [ "${branch}" == "master" ] &&  branch="${bold}M${normal}"

    [ -n "$(git ls-files -m)" ] && branch="${branch}*"

    echo "${branch}"
    # alternative, a bit slower:
    # echo "$(__git_ps1)"
}

# Show return status of previous command in angle brackets, if not zero
returninfo () {
  if [ $RET != 0 ] ; then
    echo "<$RET>"
  fi
}
PROMPT_COMMAND='RET=$?; '


PROMPT_DIRTRIM=3

PROMPT_COMMAND="${PROMPT_COMMAND} history -a"

prompt_on () {
  PS1="\[${color_red}\]\$(returninfo)\[${normal}\]${userhost}:\w \[${bold}\]\$(parse_git_branch)\[${normal}\]\$ "
}
prompt_off () {
  PS1="\$"
}
prompt_on
